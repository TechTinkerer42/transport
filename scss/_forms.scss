/* angular form validation styles */
.ng-touched {}
.ng-untouched {}
.ng-pristine {}
.ng-valid {}
.ng-invalid {border:1px solid red}

$form-spacing: 10px;
$light-gray: #e6e6e6 ;
$medium-gray: #cacaca ;
$dark-gray: #8a8a8a ;
$black: #0a0a0a ;
$white: #fefefe ;
$global-radius: 0 ;

$select-background: $white;
$select-triangle-color: #333;
$select-radius: $global-radius;
$input-color: $black;
$input-font-family: inherit;
$input-font-size: rem-calc(16);
$input-background: $white;
$input-background-focus: $white;
$input-background-disabled: $light-gray;
$input-border: 1px solid $medium-gray;
$input-border-focus: 1px solid $dark-gray;
$input-shadow: inset 0 1px 2px rgba($black, 0.1);
$input-shadow-focus: 0 0 5px $medium-gray;
$input-cursor-disabled: default;
$input-transition: box-shadow 0.5s, border-color 0.25s ease-in-out;
$input-number-spinners: true;
$input-radius: $global-radius;


@mixin form-element {
  $height: ($input-font-size + ($form-spacing * 1.5) - rem-calc(1));

  display: block;
  box-sizing: border-box;
  width: 100%;
  height: $height;
  padding: $form-spacing / 2;
  border: $input-border;
  margin: 0 0 $form-spacing;

  font-family: $input-font-family;
  font-size: $input-font-size;
  color: $input-color;
  background-color: $input-background;
  box-shadow: $input-shadow;
  border-radius: $input-radius;

  @if has-value($input-transition) {
    transition: $input-transition;
  }

  // Focus state
  &:focus {
    border: $input-border-focus;
    background-color: $input-background-focus;
    outline: none;
    box-shadow: $input-shadow-focus;

    @if has-value($input-transition) {
      transition: $input-transition;
    }
  }
}


select {
  $height: ($input-font-size + ($form-spacing * 1.5) - rem-calc(1));

  height: $height;
  padding: ($form-spacing / 2);
  border: $input-border;
  margin: 0 0 $form-spacing;
  font-size: $input-font-size;
  font-family: $input-font-family;
  line-height: normal;
  color: $input-color;
  background-color: $select-background;
  border-radius: $select-radius;
  -webkit-appearance: none;
  -moz-appearance: none;

  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="32" height="24" viewBox="0 0 32 24"><polygon points="0,0 32,0 16,24" style="fill: rgb(100,100,100)"></polygon></svg>');
  background-size: 9px 6px;
  background-position: right ($form-spacing / 2) center;
  background-repeat: no-repeat;

  // Disabled state
  &:disabled {
    background-color: $input-background-disabled;
    cursor: $input-cursor-disabled;
  }

  // Hide the dropdown arrow shown in newer IE versions
  &::-ms-expand {
    display: none;
  }

  &[multiple] {
    height: auto;
  }
}

[type='text'],
[type='password'],
[type='date'],
[type='datetime'],
[type='datetime-local'],
[type='month'],
[type='week'],
[type='email'],
[type='number'],
[type='search'],
[type='tel'],
[type='time'],
[type='url'],
[type='color'],
textarea {
  @include form-element;
  -webkit-appearance: none;
  -moz-appearance: none;
}

// Text areas
textarea {
  max-width: 100%;

  &[rows] {
    height: auto;
  }
}

// Disabled/readonly state
input,
textarea {
  &:disabled,
  &[readonly] {
    background-color: $input-background-disabled;
    cursor: $input-cursor-disabled;
  }
}

// Reset styles on button-like inputs
[type='submit'],
[type='button'] {
  border-radius: $global-radius;
  -webkit-appearance: none;
  -moz-appearance: none;
}

// Reset Normalize setting content-box to search elements
// scss-lint:disable QualifyingElement
input[type='search'] {
  box-sizing: border-box;
}

// Number input styles
[type='number'] {
  @if not $input-number-spinners {
    -moz-appearance: textfield;

    [type='number']::-webkit-inner-spin-button,
    [type='number']::-webkit-outer-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
  }
}
